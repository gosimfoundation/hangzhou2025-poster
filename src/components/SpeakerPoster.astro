---
import { Image } from 'astro:assets';
import { getSpeakerPhoto } from '../data/speakerPhotos.js';
import { getSpeakerRole } from '../data/speakerRoles.js';

export interface Props {
  number: number;
  name: string;
  title: string;
  abstract: string;
}

const { number, name, title, abstract } = Astro.props;
const photoFileName = getSpeakerPhoto(name);
const role = getSpeakerRole(name);

let speakerImage = null;
if (photoFileName) {
  try {
    const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/embodied-ai/*.{jpg,jpeg,png,webp}');
    const imagePath = `/src/assets/images/embodied-ai/${photoFileName}`;
    if (images[imagePath]) {
      speakerImage = await images[imagePath]();
    }
  } catch (e) {
    console.log(`Could not load image for ${name}`);
  }
}
---

<div class={`speaker-poster ${number % 2 === 0 ? 'photo-right' : 'photo-left'} ${number % 2 === 0 ? 'bg-pink' : 'bg-white'}`}>
  <div class="speaker-header">
    {speakerImage && (
      <div class="speaker-photo">
        <Image 
          src={speakerImage.default} 
          alt={name}
          width={160}
          height={160}
          format="webp"
          quality={90}
        />
      </div>
    )}
    {!speakerImage && (
      <div class="speaker-photo-placeholder">
        <div class="initials">
          {name.split(' ').map(n => n[0]).join('').toUpperCase()}
        </div>
      </div>
    )}
    <div class="speaker-info">
      <h2>{name}</h2>
      <div class="speaker-role">{role.length > 35 ? role.substring(0, 35) + '...' : role}</div>
      <div class="talk-title">{title}</div>
    </div>
  </div>
</div>

<style>
  .speaker-poster {
    margin: 0 0 30px 0;
    width: 100%;
    padding: 0.75rem;
    border-radius: 15px;
    transition: background-color 0.3s ease;
    position: relative;
    overflow: visible;
  }
  
  .speaker-poster.bg-white {
    background-color: rgb(255, 255, 255) !important;
    opacity: 1 !important;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    --arrow-color: rgb(255, 255, 255);
    --arrow-border: rgba(200, 200, 200, 0.3);
  }
  
  .speaker-poster.bg-pink {
    background-color: rgb(255, 230, 240) !important;
    opacity: 1 !important;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    --arrow-color: rgb(255, 230, 240);
    --arrow-border: rgba(255, 200, 220, 0.3);
  }
  
  /* Callout arrow - border/outline */
  .speaker-poster::before {
    content: '' !important;
    position: absolute !important;
    bottom: -15px !important;
    width: 0 !important;
    height: 0 !important;
    border-left: 15px solid transparent !important;
    border-right: 15px solid transparent !important;
    border-top: 15px solid rgba(150, 150, 150, 0.3) !important;
    z-index: 100 !important;
    background: transparent !important;
    clip-path: none !important;
    opacity: 1 !important;
  }
  
  /* Arrow inner fill matching box background */
  .speaker-poster::after {
    content: '' !important;
    position: absolute !important;
    bottom: -13px !important;
    width: 0 !important;
    height: 0 !important;
    border-left: 13px solid transparent !important;
    border-right: 13px solid transparent !important;
    border-top: 13px solid var(--arrow-color) !important;
    z-index: 101 !important;
    background: transparent !important;
    clip-path: none !important;
    opacity: 1 !important;
  }
  
  /* Alternate arrow positions: odd rows left, even rows right */
  .speaker-poster.photo-left::before {
    left: 30% !important;
    right: auto !important;
  }
  
  .speaker-poster.photo-left::after {
    left: calc(30% - 1px) !important;
    right: auto !important;
  }
  
  .speaker-poster.photo-right::before {
    right: 30% !important;
    left: auto !important;
  }
  
  .speaker-poster.photo-right::after {
    right: calc(30% - 1px) !important;
    left: auto !important;
  }
  
  .speaker-header {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .speaker-poster.photo-right .speaker-header {
    flex-direction: row-reverse;
  }
  
  .speaker-photo {
    flex-shrink: 0;
    width: 60px;
    height: 80px;
    border-radius: 20px;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
  }
  
  .speaker-photo :global(img) {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
  }
  
  .speaker-photo-placeholder {
    flex-shrink: 0;
    width: 60px;
    height: 80px;
    border-radius: 20px;
    background: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .initials {
    font-size: 1.5rem;
    font-weight: bold;
    color: #333;
    opacity: 0.9;
  }
  
  .speaker-role {
    font-size: 0.8rem;
    color: #666;
    opacity: 0.9;
    margin-top: 0.2rem;
    margin-bottom: 0.3rem;
    line-height: 1.2;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e0e0e0;
  }
  
  .speaker-header .talk-title {
    font-size: 0.95rem;
    color: #333;
    opacity: 0.9;
    margin-top: 0.5rem;
    line-height: 1.3;
    font-weight: bold;
  }
</style>